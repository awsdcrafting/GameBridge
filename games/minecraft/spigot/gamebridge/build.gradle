plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
    id 'com.github.johnrengelman.shadow' version "7.1.2"
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.0'
}

group = 'eu.scisneromam'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
}

dependencies {
    //implementation 'org.jetbrains:kotlin:1.8.22'
    compileOnly 'io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.8.22'
    implementation 'net.axay:kspigot:1.20.2'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    implementation 'org.jetbrains.exposed:exposed-core:0.40.1'
    implementation 'org.jetbrains.exposed:exposed-dao:0.40.1'
    implementation 'org.jetbrains.exposed:exposed-jdbc:0.40.1'
    implementation 'org.xerial:sqlite-jdbc:3.40.1.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

kotlin {
    jvmToolchain(17)
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.java.srcDirs += 'src/main/java'
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
